[project]
name = "hercule"
version = "0.1.0"
description = ""
authors = [
    { name = "guilhem.heinrich", email = "guilhem.heinrich@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "gymnasium>=0.29.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "numpy>=1.24.0",
    "pydantic>=2.0.0",
]

[build-system]
requires = [
    "poetry-core>=2.0.0,<3.0.0",
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
    { include = "hercule", from = "src" },
]

[tool.poetry.group.dev.dependencies]
pdoc = "*"
tomli = "*"
pytest = "*"
pytest-cov = "*"

[tool.poetry.scripts]
hercule = "hercule.cli:cli"
gen-doc = "pyscaf.documentation.scripts.parse_doc:gen_doc"
serve-doc = "pyscaf.documentation.scripts.parse_doc:serve_doc"

[tool.pyscaf.documentation]
output_path = "docs"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--color=yes"
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.ruff]
src = ["src", "tests"]
select = [
    "B",   # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",  # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",   # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",   # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "N",   # pep8-naming - https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "W",   # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",   # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "TID", # flake8-tidy-imports - https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid
    "TC", # flake8-type-checking - https://docs.astral.sh/ruff/rules/#flake8-type-checking-tch
    "PLC", # pylint conventions - https://docs.astral.sh/ruff/rules/#pylint-plc
    "PLE", # pylint errors - https://docs.astral.sh/ruff/rules/#pylint-ple
    "PLW", # pylint warnings - https://docs.astral.sh/ruff/rules/#pylint-plw
]
line-length = 120

# Configuration spécifique pour les imports
[tool.ruff.lint.isort]
known-first-party = ["hercule", "src.hercule"]
force-single-line = false
lines-after-imports = 2

# Configuration pour les imports tidy
[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"  # Interdit les imports relatifs vers les parents

# Configuration pour éviter les imports incohérents
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"hercule.config".msg = "Use 'src.hercule.config' instead for consistency"
"hercule.environnements".msg = "Use 'src.hercule.environnements' instead for consistency"
"hercule.models".msg = "Use 'src.hercule.models' instead for consistency"
"hercule.run".msg = "Use 'src.hercule.run' instead for consistency"

